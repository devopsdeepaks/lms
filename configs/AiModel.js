// const {
//   GoogleGenerativeAI,
//   HarmCategory,
//   HarmBlockThreshold,
// } = require("@google/generative-ai");
import { GoogleGenerativeAI } from "@google/generative-ai";

const apiKey = process.env.NEXT_PUBLIC_GEMINI_API_KEY;
const genAI = new GoogleGenerativeAI(apiKey);
console.log("ðŸš€ AiModel.js is loaded!");

const model = genAI.getGenerativeModel({
  model: "gemini-2.0-flash",
});

const generationConfig = {
  temperature: 1,
  topP: 0.95,
  topK: 40,
  maxOutputTokens: 8192,
  responseMimeType: "application/json",
};

export const courseOutline = model.startChat({
  generationConfig,
  history: [
    {
      role: "user",
      parts: [
        {
          text: "generate a study material for python for exam and  level of difficulty will be easy with summary of course list of chapter along with summary for each chapter topic list in each chapter , all result in  JSON format",
        },
      ],
    },
    {
      role: "model",
      parts: [
        {
          text: '```json\n{\n  "course_title": "Python for Beginners: Exam Prep (Easy Level)",\n  "course_description": "This course provides a fundamental introduction to Python programming, focusing on concepts suitable for beginners. It covers basic syntax, data types, control flow, functions, and basic data structures. This study material is designed to help you prepare for an introductory-level Python exam.",\n  "level": "Easy",\n  "chapters": [\n    {\n      "chapter_number": 1,\n      "chapter_title": "Introduction to Python",\n      "chapter_summary": "This chapter introduces the core concepts of Python, including what Python is, its uses, how to install it, and basic syntax rules.  It emphasizes getting the environment set up and understanding the basic structure of a Python program.",\n      "topics": [\n        {\n          "topic_title": "What is Python?",\n          "topic_description": "Definition, history, and uses of Python.  Why learn Python?",\n          "keywords": ["definition", "history", "applications", "interpreted", "high-level"]\n        },\n        {\n          "topic_title": "Installing Python and IDE Setup",\n          "topic_description": "Step-by-step guide to installing Python and setting up a basic Integrated Development Environment (IDE) like IDLE or VS Code.",\n          "keywords": ["installation", "download", "IDLE", "VS Code", "environment setup"]\n        },\n        {\n          "topic_title": "Basic Syntax",\n          "topic_description": "Understanding Python\'s basic syntax rules, including indentation, comments, and statements.",\n          "keywords": ["indentation", "comments", "statements", "syntax rules"]\n        },\n        {\n          "topic_title": "First Program: Hello, World!",\n          "topic_description": "Writing and running a simple \\"Hello, World!\\" program.",\n          "keywords": ["print()", "strings", "execution", "hello world"]\n        }\n      ]\n    },\n    {\n      "chapter_number": 2,\n      "chapter_title": "Data Types and Variables",\n      "chapter_summary": "This chapter covers Python\'s fundamental data types, like integers, floats, strings, and booleans. It also explains how to declare and use variables to store and manipulate data.",\n      "topics": [\n        {\n          "topic_title": "Data Types (Integers, Floats, Strings, Booleans)",\n          "topic_description": "Introduction to different data types in Python.",\n          "keywords": ["int", "float", "str", "bool", "data types"]\n        },\n        {\n          "topic_title": "Variables",\n          "topic_description": "Declaring and assigning values to variables.",\n          "keywords": ["variable declaration", "assignment", "variable names", "naming conventions"]\n        },\n        {\n          "topic_title": "Type Conversion",\n          "topic_description": "Converting between different data types using functions like `int()`, `float()`, and `str()`.",\n          "keywords": ["type casting", "int()", "float()", "str()", "conversion"]\n        },\n        {\n          "topic_title": "Basic Operators (Arithmetic, Assignment)",\n          "topic_description": "Understanding arithmetic operators (+, -, *, /, %), assignment operators (=, +=, -=, etc.)",\n          "keywords": ["arithmetic operators", "+", "-", "*", "/", "%", "assignment operators", "=", "+=", "-="]\n        }\n      ]\n    },\n    {\n      "chapter_number": 3,\n      "chapter_title": "Control Flow Statements",\n      "chapter_summary": "This chapter introduces control flow statements like `if`, `else`, `elif` (conditional statements) and `for` and `while` loops for controlling the execution flow of a program.",\n      "topics": [\n        {\n          "topic_title": "Conditional Statements (if, else, elif)",\n          "topic_description": "Using `if`, `else`, and `elif` to make decisions in your code based on conditions.",\n          "keywords": ["if", "else", "elif", "conditional statements", "boolean expressions"]\n        },\n        {\n          "topic_title": "For Loops",\n          "topic_description": "Iterating over sequences (like strings, lists, and ranges) using `for` loops.",\n          "keywords": ["for loop", "iteration", "sequences", "range()", "iterating"]\n        },\n        {\n          "topic_title": "While Loops",\n          "topic_description": "Executing a block of code repeatedly as long as a condition is true using `while` loops.",\n          "keywords": ["while loop", "condition", "iteration", "loop control", "break", "continue"]\n        },\n        {\n          "topic_title": "Break and Continue Statements",\n          "topic_description": "Using \'break\' to exit a loop prematurely and \'continue\' to skip to the next iteration.",\n          "keywords": ["break", "continue", "loop control"]\n        }\n      ]\n    },\n    {\n      "chapter_number": 4,\n      "chapter_title": "Functions",\n      "chapter_summary": "This chapter explains how to define and use functions to organize code into reusable blocks. It covers function arguments, return values, and scope.",\n      "topics": [\n        {\n          "topic_title": "Defining Functions",\n          "topic_description": "Creating functions using the `def` keyword.",\n          "keywords": ["def", "function definition", "function name", "parameters"]\n        },\n        {\n          "topic_title": "Calling Functions",\n          "topic_description": "Executing functions that you have defined.",\n          "keywords": ["function call", "arguments", "execution"]\n        },\n        {\n          "topic_title": "Function Arguments",\n          "topic_description": "Passing data to functions using arguments (positional, keyword).",\n          "keywords": ["arguments", "parameters", "positional arguments", "keyword arguments"]\n        },\n        {\n          "topic_title": "Return Values",\n          "topic_description": "Returning values from functions using the `return` statement.",\n          "keywords": ["return", "return value", "function output"]\n        },\n        {\n          "topic_title": "Scope of Variables (Local vs. Global)",\n          "topic_description": "Understanding the scope of variables defined inside and outside functions.",\n          "keywords": ["scope", "local variables", "global variables"]\n        }\n      ]\n    },\n    {\n      "chapter_number": 5,\n      "chapter_title": "Basic Data Structures: Lists and Strings",\n      "chapter_summary": "This chapter introduces lists and strings as fundamental data structures. It covers operations such as creating, accessing, modifying, and iterating over them.",\n      "topics": [\n        {\n          "topic_title": "Lists",\n          "topic_description": "Creating lists, accessing elements, modifying lists, and basic list methods.",\n          "keywords": ["lists", "creating lists", "indexing", "slicing", "append()", "insert()", "remove()", "len()"]\n        },\n        {\n          "topic_title": "Strings",\n          "topic_description": "Creating strings, accessing characters, string methods (e.g., `upper()`, `lower()`, `find()`, `replace()`).",\n          "keywords": ["strings", "creating strings", "indexing", "slicing", "string methods", "upper()", "lower()", "find()", "replace()", "string concatenation"]\n        },\n        {\n          "topic_title": "List Comprehensions (Introduction)",\n          "topic_description": "A brief overview of list comprehensions for creating lists concisely (optional, depending on the beginner level).",\n          "keywords":["list comprehensions", "concise lists", "creating list", "one-line operations"]\n        }\n      ]\n    }\n  ],\n  "exam_tips": [\n    "Practice writing small programs to reinforce concepts.",\n    "Pay attention to syntax, especially indentation.",\n    "Understand the difference between data types and how to convert between them.",\n    "Be able to trace the execution of code with conditional statements and loops.",\n    "Review the common string and list methods.",\n    "Work through example problems and past exam questions (if available)."\n  ]\n}\n```\n',
        },
      ],
    },
  ],
});

 export const generateNotesAiModel = model.startChat({
  generationConfig,
  history: [
    {
      role: "user",
      parts: [
        {text: "generate exam material for each chapter, make sure to includes all topics point in the content make sure to give content in HTML format( do not add HTMLK, head, body, title tag), The chapters :  {\n      \"chapter_number\": 1,\n      \"chapter_title\": \"Introduction to C Programming\",\n      \"chapter_summary\": \"This chapter introduces the basics of C programming, including its history, features, and structure of a C program. It also covers the compilation and execution process.\",\n      \"topics\": [\n        {\n          \"topic_title\": \"History and Features of C\",\n          \"topic_description\": \"Brief overview of the history of C and its key features.\",\n          \"keywords\": [\n            \"Dennis Ritchie\",\n            \"Bell Labs\",\n            \"portability\",\n            \"efficiency\",\n            \"structured programming\"\n          ]\n        },"},
      ],
    },
    {
      role: "model",
      parts: [
        {text: "```html\n<h1>Chapter 1: Introduction to C Programming - Exam</h1>\n\n<h2>Multiple Choice Questions</h2>\n\n<ol>\n    <li>\n        Who is credited with the creation of the C programming language?\n        <ol type=\"a\">\n            <li><input type=\"radio\" name=\"q1\" value=\"a\"> Guido van Rossum</li>\n            <li><input type=\"radio\" name=\"q1\" value=\"b\"> James Gosling</li>\n            <li><input type=\"radio\" name=\"q1\" value=\"c\"> Dennis Ritchie</li>\n            <li><input type=\"radio\" name=\"q1\" value=\"d\"> Bjarne Stroustrup</li>\n        </ol>\n    </li>\n    <li>\n        Where was the C programming language developed?\n        <ol type=\"a\">\n            <li><input type=\"radio\" name=\"q2\" value=\"a\"> Microsoft</li>\n            <li><input type=\"radio\" name=\"q2\" value=\"b\"> Bell Labs</li>\n            <li><input type=\"radio\" name=\"q2\" value=\"c\"> Apple</li>\n            <li><input type=\"radio\" name=\"q2\" value=\"d\"> Google</li>\n        </ol>\n    </li>\n    <li>\n        Which of the following is a key feature of the C programming language?\n        <ol type=\"a\">\n            <li><input type=\"radio\" name=\"q3\" value=\"a\"> Platform dependence</li>\n            <li><input type=\"radio\" name=\"q3\" value=\"b\"> Low efficiency</li>\n            <li><input type=\"radio\" name=\"q3\" value=\"c\"> Portability</li>\n            <li><input type=\"radio\" name=\"q3\" value=\"d\"> Limited memory management</li>\n        </ol>\n    </li>\n    <li>\n        C is known for being a ______ programming language.\n        <ol type=\"a\">\n            <li><input type=\"radio\" name=\"q4\" value=\"a\"> Object-oriented</li>\n            <li><input type=\"radio\" name=\"q4\" value=\"b\"> Functional</li>\n            <li><input type=\"radio\" name=\"q4\" value=\"c\"> Structured</li>\n            <li><input type=\"radio\" name=\"q4\" value=\"d\"> Logical</li>\n        </ol>\n    </li>\n    <li>\n        Which of the following is NOT a key characteristic of C programs?\n        <ol type=\"a\">\n            <li><input type=\"radio\" name=\"q5\" value=\"a\"> Modularity</li>\n            <li><input type=\"radio\" name=\"q5\" value=\"b\"> Simplicity</li>\n            <li><input type=\"radio\" name=\"q5\" value=\"c\"> Automatic garbage collection</li>\n            <li><input type=\"radio\" name=\"q5\" value=\"d\"> System Programming capabilities</li>\n        </ol>\n    </li>\n</ol>\n\n<h2>True/False Questions</h2>\n\n<ol>\n    <li>\n        True or False: C is a high-level programming language.\n        <input type=\"radio\" name=\"tf1\" value=\"true\"> True\n        <input type=\"radio\" name=\"tf1\" value=\"false\"> False\n    </li>\n    <li>\n        True or False:  The compilation process converts source code into machine code directly executable by the computer.\n        <input type=\"radio\" name=\"tf2\" value=\"true\"> True\n        <input type=\"radio\" name=\"tf2\" value=\"false\"> False\n    </li>\n    <li>\n        True or False: Portability means that a C program can be easily adapted to run on different operating systems.\n        <input type=\"radio\" name=\"tf3\" value=\"true\"> True\n        <input type=\"radio\" name=\"tf3\" value=\"false\"> False\n    </li>\n        <li>\n        True or False:  The linker combines object code with library functions to create an executable file.\n        <input type=\"radio\" name=\"tf4\" value=\"true\"> True\n        <input type=\"radio\" name=\"tf4\" value=\"false\"> False\n    </li>\n        <li>\n        True or False:  C programs are always compiled and executed in a single step.\n        <input type=\"radio\" name=\"tf5\" value=\"true\"> True\n        <input type=\"radio\" name=\"tf5\" value=\"false\"> False\n    </li>\n</ol>\n\n<h2>Fill in the Blanks</h2>\n\n<ol>\n    <li>C was originally developed at _____________.</li>\n    <li>____________ is a key feature of C, allowing programs to run on different platforms with minimal changes.</li>\n    <li>The process of converting source code to machine code is called _____________.</li>\n    <li>The _______________ stage combines the object code with necessary library functions.</li>\n    <li>A typical C program consists of sections like _______________, function definitions, and the main function.</li>\n</ol>\n\n<h2>Short Answer Questions</h2>\n\n<ol>\n    <li>\n        Explain the importance of portability in C programming.\n    </li>\n    <li>\n        Describe the general structure of a basic C program.\n    </li>\n    <li>\n        What are the main steps involved in compiling and executing a C program?\n    </li>\n    <li>\n        What are some advantages of using C over other programming languages?\n    </li>\n    <li>\n        Explain the difference between source code, object code, and executable code.\n    </li>\n</ol>\n```"},
      ],
    },
  ],
});
